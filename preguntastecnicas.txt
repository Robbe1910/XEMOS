
Protocolo I2C ESP32:
Resumen:
El protocolo I2C (Inter-Integrated Circuit) es un protocolo de comunicación serial síncrona utilizado para la comunicación entre microcontroladores, sensores, actuadores y otros dispositivos electrónicos. En el contexto del ESP32, que es un microcontrolador de bajo consumo de energía y alto rendimiento, el I2C se utiliza para la comunicación con dispositivos periféricos, como sensores de temperatura, acelerómetros, giroscopios, pantallas LCD, EEPROM, etc.

Detalle:

Master/Slave: En el protocolo I2C, puede haber un dispositivo maestro (generalmente el microcontrolador) que inicia y controla la comunicación, y uno o varios dispositivos esclavos que responden a las solicitudes del maestro.
SCL y SDA: Son las líneas de reloj (SCL) y datos (SDA) que se utilizan para la comunicación entre los dispositivos. SCL es una línea de reloj controlada por el maestro, mientras que SDA es la línea de datos bidireccional.
Dirección del dispositivo: Cada dispositivo I2C tiene una dirección única de 7 bits que lo identifica en el bus. Esto permite que múltiples dispositivos compartan el mismo bus sin conflictos de dirección.

Multiplexor I2C:
Resumen:
Un multiplexor I2C, también conocido como multiplexor de bus I2C o I2C switch, es un dispositivo que permite a un solo maestro (microcontrolador) controlar múltiples dispositivos esclavos (sensores, actuadores, etc.) en un bus I2C. El multiplexor tiene varios canales de entrada y salida, y selecciona dinámicamente uno de los dispositivos esclavos conectados al bus I2C para la comunicación con el maestro.

Detalle:

Selección de canal: El multiplexor I2C tiene un mecanismo para seleccionar qué dispositivo esclavo está conectado al bus I2C en un momento dado. Esto se puede lograr a través de señales de control o comandos enviados desde el microcontrolador al multiplexor.
Direccionamiento: Algunos multiplexores I2C tienen su propia dirección en el bus I2C para que el microcontrolador pueda enviar comandos directamente al multiplexor para seleccionar el canal adecuado.
Ampliación de la capacidad: El uso de un multiplexor I2C permite aumentar la capacidad de un bus I2C limitado, lo que permite conectar más dispositivos al microcontrolador de lo que permitiría el número de pines de E/S disponibles en el microcontrolador.
Se usan el GPIO 21 para enviar datos por el sda(serial data) y el GPIO 22 para el scl(serial clock).
Usamos el multiplexor para poder mostrar diferentes datos que sin este solo podriamos mostrar un dato en todas las pantallas por ejemplo.

Pines Analógicos y Digitales ESP32:
Resumen:
El ESP32 es un microcontrolador que tiene una combinación de pines analógicos y digitales para entrada/salida de propósito general (E/S). Los pines analógicos pueden leer voltajes analógicos, mientras que los pines digitales pueden leer y escribir señales digitales (alto/bajo).

Detalle:

Pines analógicos: El ESP32 tiene una serie de pines que pueden leer voltajes analógicos mediante el uso de un conversor analógico-digital (ADC). Estos pines se utilizan para conectar sensores analógicos como potenciómetros, sensores de luz, sensores de temperatura, etc.
Pines digitales: El ESP32 también tiene pines que pueden funcionar como entradas o salidas digitales. Estos pines pueden leer señales digitales (alto/bajo) o escribir señales digitales para controlar dispositivos como LEDs, relés, actuadores, etc.
Funciones especiales: Algunos pines del ESP32 tienen funciones especiales, como UART, SPI, I2C, PWM, etc., lo que les permite realizar tareas específicas de comunicación o generación de señales.
Se leen los datos en 12 bits para leer valores de 0 - 4095 y de forma mátematica ajustas el muestreo de datos, que lo hace la librería del propio sensor y por eso vemos valores reales que sabemos interpretar.
Se hace uso del pin ADC0.

Cómo funciona el código del ESP32 - void setup() y el void loop():
Resumen:
El código para el ESP32, al igual que para otros microcontroladores basados en Arduino, sigue una estructura básica que incluye las funciones void setup() y void loop(). Estas funciones son fundamentales para la inicialización del microcontrolador y la ejecución del programa principal.

Detalle:

void setup(): La función void setup() se ejecuta una vez al inicio del programa. Se utiliza para realizar la configuración inicial del microcontrolador y sus periféricos, como configurar los modos de los pines, iniciar la comunicación serial, inicializar variables, etc. Sería con el ejmplo de un restaurante abrir el restaurante, encendear las luces, prepara los fuegos, etc.
void loop(): La función void loop() se ejecuta continuamente después de que void setup() ha terminado de ejecutarse. Contiene el código principal del programa, que se ejecuta en un bucle infinito. Aquí es donde se manejan las entradas y salidas, se toman decisiones basadas en las lecturas de sensores, se envían datos por la comunicación serial, etc. Siguiendo con el ejemplo sería dar la bienvenida al cliente, tomar nota de lo que van a comer, servirles, cobrarles, etc.
Estructura repetitiva: El código dentro de void loop() se ejecuta repetidamente en un bucle infinito, a menos que se detenga explícitamente o se reinicie el microcontrolador. Esto permite que el microcontrolador realice tareas de manera continua y responda a eventos en tiempo real.

Protocolo I2C ESP32:
¿Cuál es una característica importante del protocolo I2C?
a) Controlar la sincronización de datos entre dispositivos en el bus I2C.
b) Configurar los pines de E/S del microcontrolador.
c) Reproducir música en un altavoz mediante I2C.
d) Hacer malabares con pingüinos en el Polo Norte.

Multiplexor I2C:
¿Qué permite hacer un multiplexor I2C?
a) Permite a un solo maestro controlar múltiples dispositivos esclavos en un bus I2C.
b) Activa el modo turbo en el microcontrolador.
c) Hace que el microcontrolador ESP32 vuele.
d) Traduce señales cósmicas en recetas de cocina intergalácticas.

Pines Analógicos y Digitales ESP32:
¿Qué función cumplen los pines analógicos y digitales en el ESP32?
a) Los pines analógicos pueden leer voltajes analógicos, mientras que los pines digitales pueden leer y escribir señales digitales.
b) Los pines analógicos pueden hacer café, mientras que los pines digitales pueden bailar salsa.
c) Los pines analógicos son en realidad portales dimensionales, mientras que los pines digitales son magos disfrazados.
d) Los pines analógicos sirven café con leche cósmico y los pines digitales bailan tango con los electrones.

Cómo funciona el código del ESP32 - void setup() y el void loop():
¿Cuál es la función de la función void loop() en un programa para microcontroladores?
a) Realizar la configuración inicial del microcontrolador y sus periféricos.
b) Preparar una fiesta para las ranas del jardín.
c) Hacer malabares con hamburguesas en el aire.
d) Convertir números en sus equivalentes en idioma de delfines.

¿Cuál es la característica clave del protocolo I2C para la comunicación entre dispositivos?
a) Controlar la sincronización de datos entre dispositivos.
b) Configurar los pines de E/S del microcontrolador.
c) Establecer una conexión inalámbrica con otros dispositivos.
d) Transformar pensamientos en señales de humo.

¿Qué permite hacer un multiplexor I2C en un sistema con varios dispositivos esclavos?
a) Permite a un solo maestro controlar múltiples dispositivos esclavos en un bus I2C.
b) Controla el flujo de energía hacia los dispositivos conectados.
c) Activa el modo invisibilidad en el microcontrolador.
d) Lee la mente de los microcontroladores y predice el futuro de los sensores.

¿Cuál es la función de los pines analógicos en el ESP32?
a) Leer voltajes analógicos de sensores.
b) Emitir rayos láser.
c) Producir helado de chocolate.
d) Teletransportar señales de radio a Marte.

¿Qué hace la función void setup() en el código del ESP32?
a) Realiza la configuración inicial del microcontrolador y sus periféricos.
b) Da una fiesta para las ardillas del parque.
c) Canta una serenata a los girasoles.
d) Teletransporta el código a una dimensión paralela.

¿Cuál es la característica principal de los pines digitales en el ESP32?
a) Pueden leer y escribir señales digitales.
b) Preparan café expreso.
c) Teletransportan galletas de chocolate.
d) Transforman pulsos en lluvias de confeti.

¿Qué hace la función void loop() en el código del ESP32?
a) Se ejecuta continuamente después de la inicialización para el bucle principal del programa.
b) Baila salsa con los pines digitales.
c) Organiza una fiesta en el microcontrolador.
d) Calcula la velocidad del viento en la Luna.

¿Qué es SCL en el protocolo I2C?
a) La línea de reloj controlada por el maestro.
b) Una señal de ruido cósmico.
c) Una canción popular de los años 80.
d) Un acrónimo para "Super Cool Language".

¿Cuál es la función de la dirección del dispositivo en el protocolo I2C?
a) Identifica de manera única a cada dispositivo en el bus.
b) Controla la temperatura ambiente del microcontrolador.
c) Activa el modo fiesta en el sensor de temperatura.
d) Despierta a los elfos del sueño eterno.

¿Por qué se usa un multiplexor I2C en un sistema con varios dispositivos?
a) Para aumentar la capacidad de un bus I2C.
b) Para enviar señales de humo a los dispositivos.
c) Para hacer malabares con los datos.
d) Para encontrar el tesoro enterrado de los chips antiguos.

¿Cuál es la función principal de los pines analógicos en el ESP32?
a) Leer voltajes analógicos de sensores.
b) Tocar música de jazz.
c) Convertir señales en flores.
d) Hacer café para los robots.

¿Qué función cumple la función void setup() en el código del ESP32?
a) Realizar la configuración inicial del microcontrolador y sus periféricos.
b) Organizar una carrera de caracoles.
c) Lanzar cohetes al espacio.
d) Descifrar jeroglíficos alienígenas.

¿Cuál es la capacidad de lectura de los pines analógicos en el ESP32?
a) 12 bits.
b) 42 galaxias.
c) Infinito.
d) El número de estrellas en el universo.

¿Qué es SDA en el protocolo I2C?
a) La línea de datos bidireccional.
b) Un código secreto para abrir puertas dimensionales.
c) Una receta de pastel de manzana.
d) El nombre de una famosa estrella de cine.

¿Qué hace la función void loop() en el código del ESP32?
a) Se ejecuta continuamente después de la inicialización para el bucle principal del programa.
b) Juega al escondite con los bits.
c) Organiza una fiesta en el microcontrolador.
d) Calcula la edad del universo en picosegundos.

¿Por qué es importante la dirección del dispositivo en el protocolo I2C?
a) Identifica de manera única a cada dispositivo en el bus.
b) Ordena pizza para los robots.
c) Envía mensajes secretos a través del espacio-tiempo.
d) Protege el universo de los gatos extraterrestres.

¿Cuál es el propósito del bucle void loop() en un programa para microcontroladores?
a) Ejecutar el código principal del programa en un bucle infinito.
b) Tocar música de salsa con los pines digitales.
c) Hacer malabares con los datos de los sensores.
d) Resolver ecuaciones diferenciales en una dimensión paralela.